<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="albumMapper">
	<!-- namespace 속성 : 현재 공간(영역)에 대한 이름(반드시 지정!) -->
	
	<resultMap type="Folder" id="folder_rm">
		<id property="folderNo" column="FOLDER_NO"/>
		
		<result property="boardTypeNo" column="BOARD_TYPE_NO"/>
		<result property="boardTypeName" column="BOARD_TYPE_NAME"/>		
		<result property="folderName" column="FOLDER_NAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>

	<resultMap type="Album" id="albumList_rm">
		<id property="albumNo" column="ALBUM_NO"/>
		
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="albumTitle" column="A_TITLE"/>
		<result property="albumContent" column="A_CONTENT"/>
		<result property="thumbnailImage" column="THUMBNAIL_IMG"/>		
		<result property="albumCreate" column="A_CREATE"/>
	</resultMap>
	
	<resultMap type="Album" id="albumDetail_rm">
		<id property="albumNo" column="ALBUM_NO"/>
		
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="folderNo" column="FOLDER_NO"/>
		<result property="albumTitle" column="A_TITLE"/>
		<result property="albumContent" column="A_CONTENT"/>
		<result property="thumbnailImage" column="THUMBNAIL_IMG"/>		
		<result property="albumCreate" column="A_CREATE"/>
		<result property="latitude" column="LATITUDE"/>
		<result property="longitude" column="LONGITUDE"/>
		<result property="albumScrapYN" column="A_SCRAP_YN"/>		
		<result property="albumScrapAllowYN" column="A_SCRAP_ALLOW_YN"/>
		<result property="openFlag" column="A_OPEN_FL"/>
		<result property="locationName" column="LOCATION_NAME"/>
		
		<collection property="albumImageList" javaType="java.util.ArrayList" ofType="AlbumImage" select="selectAlbumImageList" column="ALBUM_NO"></collection>
		<collection property="commentList" javaType="java.util.ArrayList" ofType="Comment" select="selectCommentList" column="ALBUM_NO"></collection>
	</resultMap>

	<resultMap type="AlbumImage" id="albumImage_rm">
		<id property="imageNo" column="IMG_NO"/>
		
		<result property="albumNo" column="ALBUM_NO"/>
		<result property="imagePath" column="IMG_PATH"/>
		<result property="imageRename" column="IMG_RENAME"/>
		<result property="imageOriginalName" column="IMG_ORIGINAL_NAME"/>
		<result property="imageOrder" column="IMG_ORDER"/>
	</resultMap>
	
	<resultMap type="Comment" id="comment_rm">
		<id property="commentNo" column="COMMENT_NO"/>
		
		<result property="level" column="LEVEL"/>
		<result property="commentContent" column="COMMENT_CONTENT"/>
		<result property="commentCreate" column="COMMENT_CREATE"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>		
		<result property="profileImage" column="PROFILE_IMG"/>
		<result property="parentCommentNo" column="PARENT_COMMENT_NO"/>
		<result property="childCommentCount" column="CHILD_COMMENT_COUNT"/>
		<result property="ownFontNo" column="OWN_FONT_NO"/>
	</resultMap>
	
	<!-- 깐부 여부 체크 -->
	<select id="checkFriend" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT * FROM FRIEND WHERE ASKED_MEMBER_NO = #{loginMemberNo} AND ASKING_MEMBER_NO = #{hostMemberNo} AND FRIEND_ACCEPT_FL = 1
			UNION 
			SELECT * FROM FRIEND WHERE ASKED_MEMBER_NO = #{hostMemberNo} AND ASKING_MEMBER_NO = #{loginMemberNo} AND FRIEND_ACCEPT_FL = 1)
	</select>
	
	<!-- 폴더 목록 조회 -->
	<select id="selectFolderList" parameterType="map" resultMap="folder_rm">
		SELECT F.*, (SELECT BOARD_TYPE_NAME FROM BOARD_TYPE WHERE BOARD_TYPE_NO = #{boardTypeNo}) BOARD_TYPE_NAME
		FROM FOLDER F
		WHERE MEMBER_NO = #{hostMemberNo}	-- 미니홈 주인 회원 번호
		AND BOARD_TYPE_NO = #{boardTypeNo}
		ORDER BY FOLDER_ORDER
	</select>
	
	<!-- 특정 폴더의 앨범 갯수 조회 -->
	<select id="getListCount" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		<![CDATA[
			FROM ALBUM
			WHERE FOLDER_NO = #{folderNo}
			AND A_OPEN_FL <= #{flag}
			AND A_DEL_FL = 'N'
		]]>
	</select>
	
	<!-- 앨범 목록 조회 -->
	<select id="selectAlbumList" parameterType="map" resultMap="albumList_rm">
		<![CDATA[
			SELECT A.ALBUM_NO, MEMBER_NO, A.A_OPEN_FL,
				(SELECT IMG_PATH || IMG_RENAME 
				FROM ALBUM_IMG AI 
				WHERE AI.ALBUM_NO = A.ALBUM_NO AND AI.IMG_ORDER = 0) THUMBNAIL_IMG
			FROM ALBUM A
			WHERE FOLDER_NO = #{folderNo}
			AND A_DEL_FL = 'N'
			AND A_OPEN_FL <= #{flag}
			ORDER BY ALBUM_NO DESC
		]]>
	</select>
	
	<!-- 앨범 상세 조회 -->
	<select id="selectAlbum" parameterType="_int" resultMap="albumDetail_rm">
		SELECT ALBUM_NO, MEMBER_NO, A_TITLE, A_CONTENT, LATITUDE, LONGITUDE, LOCATION_NAME, A_SCRAP_YN, FOLDER_NO, A_SCRAP_ALLOW_YN, A_OPEN_FL,
		
			TO_CHAR(A_CREATE, 'YYYY.MM.DD') A_CREATE 
		FROM ALBUM
		WHERE ALBUM_NO = #{albumNo}
	</select>
	<!-- 앨범 댓글 조회 -->
	<select id="selectCommentList" parameterType="_int" resultMap="comment_rm">
		SELECT LEVEL, C.* FROM
			<![CDATA[
			(SELECT COMMENT_NO, COMMENT_CONTENT,
				CASE  
				  WHEN SYSDATE - COMMENT_CREATE < 1/24/60
				  THEN FLOOR( (SYSDATE - COMMENT_CREATE) * 24 * 60 * 60 ) || '초 전'
				  WHEN SYSDATE - COMMENT_CREATE < 1/24
				  THEN FLOOR( (SYSDATE - COMMENT_CREATE) * 24 * 60) || '분 전'
				  WHEN SYSDATE - COMMENT_CREATE < 1
				  THEN FLOOR( (SYSDATE - COMMENT_CREATE) * 24) || '시간 전'
				  ELSE TO_CHAR(COMMENT_CREATE, 'YYYY-MM-DD')
				END COMMENT_CREATE,
				BOARD_NO, MEMBER_NO, PARENT_COMMENT_NO, MEMBER_NAME, MEMBER_NICKNAME, PROFILE_IMG,
				(SELECT COUNT(*) FROM "COMMENT" WHERE PARENT_COMMENT_NO = MAIN.COMMENT_NO AND COMMENT_DEL_YN='N') CHILD_COMMENT_COUNT,
				OWN_FONT_NO
				FROM "COMMENT" MAIN
				JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_NO = #{albumNo}
			AND BOARD_TYPE_NO = 2
			AND COMMENT_DEL_YN = 'N') C
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO DESC
		]]>
	</select>
	
	
	<!-- 앨범 이미지 목록 조회 -->
	<select id="selectAlbumImageList" parameterType="_int" resultMap="albumImage_rm">
		SELECT * FROM 
		ALBUM_IMG 
		WHERE ALBUM_NO = #{albumNo}
		ORDER BY IMG_ORDER
	</select>
	
	<!-- 앨범 작성(사진 제외) -->
	<insert id="albumWrite" parameterType="Album" useGeneratedKeys="true">
		<selectKey keyProperty="albumNo" resultType="_int" order="BEFORE">
			SELECT SEQ_ALBUM_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ALBUM (ALBUM_NO, MEMBER_NO, A_TITLE, A_CONTENT, A_CREATE, A_DEL_FL, LATITUDE, LONGITUDE, LOCATION_NAME, FOLDER_NO, A_OPEN_FL ,A_SCRAP_ALLOW_YN)
		VALUES(#{albumNo}, #{memberNo}, #{albumTitle}, #{albumContent}, DEFAULT, DEFAULT, #{latitude}, #{longitude}, #{locationName}, #{folderNo}, #{openFlag}, #{albumScrapAllowYN})
	</insert>
	
	<!-- 앨범 작성 사진 업로드 -->
	<insert id="insertAlbumImageList" parameterType="list">
		INSERT INTO ALBUM_IMG
		SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.* FROM
		<foreach collection="list" item="albumImage" open="(" close=") A" separator="UNION ALL">
			SELECT #{albumImage.albumNo} ALBUM_NO,
					#{albumImage.imagePath} IMG_PATH,
					#{albumImage.imageRename} IMG_RENAME,
					#{albumImage.imageOrder} IMG_ORDER,
					#{albumImage.imageOriginalName} IMG_ORIGINAL_NAME
					FROM DUAL
		</foreach>
	</insert>
	
	<!-- 앨범 삭제 -->
	<update id="albumDelete" parameterType="_int">
		UPDATE ALBUM SET
		A_DEL_FL = 'Y'
		WHERE ALBUM_NO = #{albumNo}
	</update>
	
	<!-- 앨범 수정 -->
	<update id="albumUpdate">
		UPDATE ALBUM SET
		FOLDER_NO = #{folderNo},
		A_TITLE = #{albumTitle},
		A_CONTENT = #{albumContent},
		LATITUDE = #{latitude},
		LONGITUDE = #{longitude},
		LOCATION_NAME = #{locationName},
		A_OPEN_FL = #{openFlag},
		A_SCRAP_ALLOW_YN = #{albumScrapAllowYN}
		WHERE ALBUM_NO = #{albumNo}
	</update>
	
	<!-- 앨범 이미지 삭제 -->
	<delete id="albumImageDelete">
		DELETE FROM ALBUM_IMG
		${condition}
	</delete>
	
	<!-- 앨범 이미지 순서 초기화 -->
	<update id="initImageOrder">
		UPDATE ALBUM_IMG MAIN SET 
		IMG_ORDER = (SELECT RNUM - 1
					FROM (SELECT ROWNUM RNUM, IMG_ORDER
						FROM ALBUM_IMG
						WHERE ALBUM_NO = #{albumNo}
						ORDER BY IMG_ORDER) SUB			
					WHERE SUB.IMG_ORDER = MAIN.IMG_ORDER)
		WHERE ALBUM_NO = #{albumNo}
	</update>
	
	<!-- 앨범 스크랩 -->
	<insert id="albumScrap" parameterType="Album" useGeneratedKeys="true">
		<selectKey keyProperty="albumNo" resultType="_int" order="BEFORE">
			SELECT SEQ_ALBUM_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ALBUM (ALBUM_NO, MEMBER_NO, A_TITLE, A_CONTENT, LATITUDE, LONGITUDE, A_OPEN_FL, A_SCRAP_YN, FOLDER_NO, LOCATION_NAME)
		SELECT #{albumNo}, #{memberNo}, A_TITLE, A_CONTENT, LATITUDE, LONGITUDE, #{openFlag}, 'Y', #{folderNo}, LOCATION_NAME FROM ALBUM WHERE ALBUM_NO = #{scrapAlbumNo}
	</insert>
	
	<!-- 앨범 이미지 스크랩 -->
	<insert id="albumImageScrap" parameterType="Album">
		INSERT INTO ALBUM_IMG (IMG_NO, ALBUM_NO, IMG_PATH, IMG_RENAME, IMG_ORDER, IMG_ORIGINAL_NAME)
		SELECT SEQ_IMG_NO.NEXTVAL, #{albumNo}, IMG_PATH, IMG_RENAME, IMG_ORDER, IMG_ORIGINAL_NAME  FROM ALBUM_IMG WHERE ALBUM_NO = #{scrapAlbumNo}
	</insert>
</mapper>
