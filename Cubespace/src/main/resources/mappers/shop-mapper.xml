<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shop">
	<!-- namespace 속성 : 현재 공간(영역)에 대한 이름(반드시 지정!) -->

	<!-- 폰트 VO -->
	<resultMap type="ShopFont" id="shopFont_rm">
		<id property="goodsNo" column="FONT_NO"/>
		<result property="goodsName" column="FONT_NAME"></result>
		<result property="goodsPath" column="FONT_PATH"></result>
		<result property="goodsCreater" column="FONT_CREATER"></result>
		<result property="goodsCount" column="GOODS_COUNT_NO"></result>
		<result property="useGoodsNo" column="USE_GOODS_NO"></result>
	</resultMap>
	
	<!-- 배경음악 VO -->
	<resultMap type="ShopMusic" id="ShopMusic_rm">
		<id property="goodsNo" column="MUSIC_NO"/>
		<result property="goodsName" column="MUSIC_NAME"></result>
		<result property="goodsPath" column="MUSIC_PATH"></result>
		<result property="goodsImagePath" column="MUSIC_THUMNAIL"></result>
		<result property="goodsCreater" column="MUSIC_CREATER"></result>
		<result property="goodsCount" column="GOODS_COUNT_NO"></result>
		<result property="useGoodsNo" column="USE_GOODS_NO"></result>
	</resultMap>
	
	<!-- 미니룸 소품 VO -->
	<resultMap type="ShopMiniroom" id="ShopMiniroom_rm">
		<id property="goodsNo" column="GOODS_NO"/>
		<result property="goodsName" column="GOODS_NAME"></result>
		<result property="goodsPath" column="GOODS_PATH"></result>
		<result property="goodsCreater" column="GOODS_CREATER"></result>
		<result property="goodsCount" column="GOODS_COUNT_NO"></result>
		<result property="useGoodsNo" column="USE_GOODS_NO"></result>
	</resultMap>

   <!-- 상점 상품 추가(폰트,배경음악,소품) -->
	<insert id="goodsAddButton">
		INSERT INTO MEMBER_OWN_GOODS 
		VALUES(SEQ_OWN_NO.NEXTVAL,#{loginMemberNo},#{shopCathNo},#{goodsNo})
	</insert>
	
		<!-- 폰트 상점 상품 갯수 구하기 -->
	<select id="shopFontCount" resultType="_int">
		SELECT COUNT(FONT_NO) FONT_COUNT  FROM FONT_SHOP
		WHERE FONT_NO != 1
	</select>
	
	<!-- 배경음악 상점 상품 갯수 구하기 -->
	<select id="shopMusicCount" resultType="_int">
		SELECT COUNT(MUSIC_NO) MUSIC_COUNT  FROM MUSIC_SHOP
	</select>
	
	<!-- 미니룸소품 상점 상품 갯수 구하기 -->
	<select id="shopMiniroomCount" resultType="_int">
		SELECT COUNT(GOODS_NO) GOODS_COUNT  FROM GOODS_SHOP
	</select>
	
	
 	 <!-- 최신 폰트 상품 목록 조회  -->
	<select id="shopNewFont"  resultMap="shopFont_rm">
		SELECT * FROM (
		SELECT FONT_NO, FONT_NAME ,FONT_PATH ,FONT_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN FONT_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 1) THEN FONT_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM FONT_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 1
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.FONT_NO = S.GOODS_NO)
		ORDER BY FONT_NO DESC) 
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
 	 <!-- 최신 배경음악 상품 목록 조회  -->
	<select id="shopNewMusic"  resultMap="ShopMusic_rm">
		SELECT * FROM (
		SELECT MUSIC_NO, MUSIC_NAME ,MUSIC_PATH, MUSIC_THUMNAIL, MUSIC_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN MUSIC_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 2) THEN MUSIC_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM MUSIC_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 2
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.MUSIC_NO = S.GOODS_NO)
		ORDER BY MUSIC_NO DESC) 
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
 	 <!-- 최신 미니룸소품 상품 목록 조회  -->
	<select id="shopNewMiniroom"  resultMap="ShopMiniroom_rm">
		SELECT * FROM (
		SELECT F.GOODS_NO, GOODS_NAME ,GOODS_PATH, GOODS_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN F.GOODS_NO IN (SELECT A.GOODS_NO
		   FROM MEMBER_OWN_GOODS A
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 3) THEN F.GOODS_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM GOODS_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 3
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.GOODS_NO = S.GOODS_NO)
		ORDER BY F.GOODS_NO DESC) 
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
   
	<!-- 인기 폰트 상품 목록 조회  -->
	<select id="shopPopularFont"  resultMap="shopFont_rm">
		SELECT * FROM (
		SELECT FONT_NO, FONT_NAME ,FONT_PATH ,FONT_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN FONT_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 1) THEN FONT_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM FONT_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 1
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.FONT_NO = S.GOODS_NO)
		WHERE FONT_NO != 1
		ORDER BY GOODS_COUNT_NO DESC, FONT_NO DESC) 
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
	<!-- 인기 배경음악 상품 목록 조회 -->
	<select id="shopPopularMusic"  resultMap="ShopMusic_rm">
		SELECT * FROM (
		   SELECT MUSIC_NO, MUSIC_NAME ,MUSIC_PATH, MUSIC_THUMNAIL, MUSIC_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN MUSIC_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 2) THEN MUSIC_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM MUSIC_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 2
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
			) S ON (F.MUSIC_NO = S.GOODS_NO)
		ORDER BY GOODS_COUNT_NO DESC, MUSIC_NO DESC) 
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
	<!-- 인기 미니룸소품 상품 목록 조회 -->
	<select id="shopPopularMiniroom"  resultMap="ShopMiniroom_rm">
				SELECT * FROM (
		   SELECT F.GOODS_NO, GOODS_NAME ,GOODS_PATH, GOODS_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN F.GOODS_NO IN (SELECT A.GOODS_NO
		   FROM MEMBER_OWN_GOODS A
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 3) THEN F.GOODS_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
			FROM GOODS_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 3
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.GOODS_NO = S.GOODS_NO)
		ORDER BY GOODS_COUNT_NO DESC, F.GOODS_NO DESC)  
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
	
	
	<!-- 페이징 처리객체 사용하여 폰트 상점 상품 목록 조회 -->
	<select id="selectFontList" resultMap="shopFont_rm">
		SELECT FONT_NO, FONT_NAME ,FONT_PATH ,FONT_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN FONT_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 1) THEN FONT_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM FONT_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 1
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.FONT_NO = S.GOODS_NO)
		WHERE FONT_NO != 1
		<if test= 'shopSearch != null and shopSearch!="" '>
		AND FONT_NAME LIKE '%${shopSearch}%' OR FONT_CREATER LIKE '%${shopSearch}%'
		</if>
		ORDER BY FONT_NO DESC
	</select>
	
		<!-- 페이징 처리객체 사용하여 배경음악 상점 상품 목록 조회 -->
	<select id="selectShopMusicList" resultMap="ShopMusic_rm">
		SELECT MUSIC_NO, MUSIC_NAME ,MUSIC_PATH, MUSIC_THUMNAIL, MUSIC_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN MUSIC_NO IN (SELECT GOODS_NO 
		   FROM MEMBER_OWN_GOODS
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 2) THEN MUSIC_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM MUSIC_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 2
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.MUSIC_NO = S.GOODS_NO)
		<if test= 'shopSearch != null and shopSearch!="" '>
		WHERE MUSIC_NAME LIKE '%${shopSearch}%' OR MUSIC_CREATER LIKE '%${shopSearch}%'
		</if>
		ORDER BY MUSIC_NO DESC
	</select>
	
	<!-- 페이징 처리객체 사용하여 미니룸소품 상점 상품 목록 조회 -->
	<select id="selectShopMiniroomList" resultMap="ShopMiniroom_rm">
		SELECT F.GOODS_NO, GOODS_NAME ,GOODS_PATH, GOODS_CREATER , NVL(COUNT_NO,0) GOODS_COUNT_NO ,
		   CASE
		   WHEN F.GOODS_NO IN (SELECT A.GOODS_NO
		   FROM MEMBER_OWN_GOODS A
		   WHERE MEMBER_NO = #{loginMemberNo} AND SHOP_CATH_NO = 3) THEN F.GOODS_NO
		   ELSE 0 
		   END AS USE_GOODS_NO
		FROM GOODS_SHOP F
		LEFT JOIN (
		   SELECT COUNT(*) COUNT_NO, GOODS_NO
		   FROM MEMBER_OWN_GOODS
		   WHERE SHOP_CATH_NO = 3
		   GROUP BY GOODS_NO
		   ORDER BY COUNT_NO DESC
		) S ON (F.GOODS_NO = S.GOODS_NO)
		<if test= 'shopSearch != null and shopSearch!="" '>
		WHERE GOODS_NAME LIKE '%${shopSearch}%' OR GOODS_CREATER LIKE '%${shopSearch}%'
		</if>
		ORDER BY F.GOODS_NO DESC
	</select>
   
   
</mapper>
